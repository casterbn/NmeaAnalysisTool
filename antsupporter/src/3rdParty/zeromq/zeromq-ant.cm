include(${CMAKE_ROOT}/Modules/ExternalProject.cmake)

unset (PRIVATE_LIB_ZMQ CACHE)
find_library (
    PRIVATE_LIB_ZMQ
    NAMES "libzeromq-ant"
    NO_DEFAULT_PATH
)
if ("PRIVATE_LIB_ZMQ-NOTFOUND" STREQUAL "${PRIVATE_LIB_ZMQ}")
    if (MSVC)
        include ("${CMAKE_CURRENT_LIST_DIR}/cmake/Modules/TestZMQVersion.cmake")
        if (MSVC_IDE)
            set (PRIVATE_CONFIG_NAME "$(ConfigurationName)")
            set (PRIVATE_OUTPUT_DIR "/$(ConfigurationName)")
        else ()
            set (PRIVATE_CONFIG_NAME "${CMAKE_BUILD_TYPE}")
            set (PRIVATE_OUTPUT_DIR "")
        endif ()
        ExternalProject_Add (libzeromq-target
            PREFIX "${USER_CONF_LIBRARY_OUTPUT_PATH}/intermediates/target/libzeromq"
            SOURCE_DIR "${USER_CONF_LIB_SRC_DIR}/3rdParty/zeromq"
            BINARY_DIR "${USER_CONF_LIBRARY_OUTPUT_PATH}/intermediates/target/libzeromq/build"
            STAMP_DIR "${USER_CONF_LIBRARY_OUTPUT_PATH}/intermediates/target/libzeromq/stamp"
            CONFIGURE_COMMAND "${CMAKE_COMMAND}" -G "${CMAKE_GENERATOR}" "${USER_CONF_LIB_SRC_DIR}/3rdParty/zeromq"
            BUILD_COMMAND "${CMAKE_COMMAND}"
                --build "${USER_CONF_LIBRARY_OUTPUT_PATH}/intermediates/target/libzeromq/build"
                --target "libzmq"
                --config "${PRIVATE_CONFIG_NAME}"
            INSTALL_COMMAND
                "("
                    "${CMAKE_COMMAND}" -E copy
                        "${USER_CONF_LIBRARY_OUTPUT_PATH}/intermediates/target/libzeromq/build/lib${PRIVATE_OUTPUT_DIR}/libzmq${_zmq_COMPILER}-mt-${ZMQ_VERSION_MAJOR}_${ZMQ_VERSION_MINOR}_${ZMQ_VERSION_PATCH}${CMAKE_SHARED_LIBRARY_SUFFIX}"
                        "${USER_CONF_EXTERNAL_MODULES_OUTPUT_DIR}/lib${PRIVATE_OUTPUT_DIR}/libzmq${_zmq_COMPILER}-mt-${ZMQ_VERSION_MAJOR}_${ZMQ_VERSION_MINOR}_${ZMQ_VERSION_PATCH}${CMAKE_SHARED_LIBRARY_SUFFIX}"
                    || "${CMAKE_COMMAND}" -E copy
                        "${USER_CONF_LIBRARY_OUTPUT_PATH}/intermediates/target/libzeromq/build/lib${PRIVATE_OUTPUT_DIR}/libzmq${_zmq_COMPILER}-mt-gd-${ZMQ_VERSION_MAJOR}_${ZMQ_VERSION_MINOR}_${ZMQ_VERSION_PATCH}${CMAKE_SHARED_LIBRARY_SUFFIX}"
                        "${USER_CONF_EXTERNAL_MODULES_OUTPUT_DIR}/lib${PRIVATE_OUTPUT_DIR}/libzmq${_zmq_COMPILER}-mt-gd-${ZMQ_VERSION_MAJOR}_${ZMQ_VERSION_MINOR}_${ZMQ_VERSION_PATCH}${CMAKE_SHARED_LIBRARY_SUFFIX}"
                ")" && "("
                    "${CMAKE_COMMAND}" -E copy
                        "${USER_CONF_LIBRARY_OUTPUT_PATH}/intermediates/target/libzeromq/build/lib${PRIVATE_OUTPUT_DIR}/libzmq${_zmq_COMPILER}-mt-${ZMQ_VERSION_MAJOR}_${ZMQ_VERSION_MINOR}_${ZMQ_VERSION_PATCH}${CMAKE_LINK_LIBRARY_SUFFIX}"
                        "${USER_CONF_EXTERNAL_MODULES_OUTPUT_DIR}/lib${PRIVATE_OUTPUT_DIR}/libzmq${_zmq_COMPILER}-mt-${ZMQ_VERSION_MAJOR}_${ZMQ_VERSION_MINOR}_${ZMQ_VERSION_PATCH}${CMAKE_LINK_LIBRARY_SUFFIX}"
                    || "${CMAKE_COMMAND}" -E copy
                        "${USER_CONF_LIBRARY_OUTPUT_PATH}/intermediates/target/libzeromq/build/lib${PRIVATE_OUTPUT_DIR}/libzmq${_zmq_COMPILER}-mt-gd-${ZMQ_VERSION_MAJOR}_${ZMQ_VERSION_MINOR}_${ZMQ_VERSION_PATCH}${CMAKE_LINK_LIBRARY_SUFFIX}"
                        "${USER_CONF_EXTERNAL_MODULES_OUTPUT_DIR}/lib${PRIVATE_OUTPUT_DIR}/libzmq${_zmq_COMPILER}-mt-gd-${ZMQ_VERSION_MAJOR}_${ZMQ_VERSION_MINOR}_${ZMQ_VERSION_PATCH}${CMAKE_LINK_LIBRARY_SUFFIX}"
                ")"
            )
        add_library(libzeromq-ant SHARED IMPORTED)
        if (MSVC_IDE)
            set_property(TARGET libzeromq-ant APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE DEBUG)
            set_target_properties(libzeromq-ant PROPERTIES
                IMPORTED_LOCATION_RELEASE "${USER_CONF_EXTERNAL_MODULES_OUTPUT_DIR}/lib/Release/libzmq${_zmq_COMPILER}-mt-${ZMQ_VERSION_MAJOR}_${ZMQ_VERSION_MINOR}_${ZMQ_VERSION_PATCH}${CMAKE_SHARED_LIBRARY_SUFFIX}"
                IMPORTED_IMPLIB_RELEASE "${USER_CONF_EXTERNAL_MODULES_OUTPUT_DIR}/lib/Release/libzmq${_zmq_COMPILER}-mt-${ZMQ_VERSION_MAJOR}_${ZMQ_VERSION_MINOR}_${ZMQ_VERSION_PATCH}${CMAKE_LINK_LIBRARY_SUFFIX}"
                IMPORTED_LOCATION_DEBUG "${USER_CONF_EXTERNAL_MODULES_OUTPUT_DIR}/lib/Debug/libzmq${_zmq_COMPILER}-mt-gd-${ZMQ_VERSION_MAJOR}_${ZMQ_VERSION_MINOR}_${ZMQ_VERSION_PATCH}${CMAKE_SHARED_LIBRARY_SUFFIX}"
                IMPORTED_IMPLIB_DEBUG "${USER_CONF_EXTERNAL_MODULES_OUTPUT_DIR}/lib/Debug/libzmq${_zmq_COMPILER}-mt-gd-${ZMQ_VERSION_MAJOR}_${ZMQ_VERSION_MINOR}_${ZMQ_VERSION_PATCH}${CMAKE_LINK_LIBRARY_SUFFIX}"
                )
        elseif ("Debug" STREQUAL "${CMAKE_BUILD_TYPE}")
            set_target_properties(libzeromq-ant PROPERTIES
                IMPORTED_LOCATION "${USER_CONF_EXTERNAL_MODULES_OUTPUT_DIR}/lib/libzmq${_zmq_COMPILER}-mt-gd-${ZMQ_VERSION_MAJOR}_${ZMQ_VERSION_MINOR}_${ZMQ_VERSION_PATCH}${CMAKE_SHARED_LIBRARY_SUFFIX}"
                IMPORTED_IMPLIB "${USER_CONF_EXTERNAL_MODULES_OUTPUT_DIR}/lib/libzmq${_zmq_COMPILER}-mt-gd-${ZMQ_VERSION_MAJOR}_${ZMQ_VERSION_MINOR}_${ZMQ_VERSION_PATCH}${CMAKE_LINK_LIBRARY_SUFFIX}"
                )
        else ()
            set_target_properties(libzeromq-ant PROPERTIES
                IMPORTED_LOCATION "${USER_CONF_EXTERNAL_MODULES_OUTPUT_DIR}/lib/libzmq${_zmq_COMPILER}-mt-${ZMQ_VERSION_MAJOR}_${ZMQ_VERSION_MINOR}_${ZMQ_VERSION_PATCH}${CMAKE_SHARED_LIBRARY_SUFFIX}"
                IMPORTED_IMPLIB "${USER_CONF_EXTERNAL_MODULES_OUTPUT_DIR}/lib/libzmq${_zmq_COMPILER}-mt-${ZMQ_VERSION_MAJOR}_${ZMQ_VERSION_MINOR}_${ZMQ_VERSION_PATCH}${CMAKE_LINK_LIBRARY_SUFFIX}"
                )
        endif ()
    elseif (CMAKE_CROSSCOMPILING)
        execute_process(
            COMMAND "${CMAKE_C_COMPILER}" "${CMAKE_C_COMPILER_ARG1}" "-dumpmachine"
            RESULT_VARIABLE _CMD_RESULT
            OUTPUT_VARIABLE PROTOLIB_TARGET_SPEC
            OUTPUT_STRIP_TRAILING_WHITESPACE
            )
        if (NOT _CMD_RESULT EQUAL 0)
            message(FATAL_ERROR "Can't get target spec or your compiler is not gcc-like.")
        endif ()

        ExternalProject_Add (libzeromq-target
            PREFIX "${USER_CONF_LIBRARY_OUTPUT_PATH}/intermediates/target/libzeromq"
            SOURCE_DIR "${USER_CONF_LIB_SRC_DIR}/3rdParty/zeromq"
            BINARY_DIR "${USER_CONF_LIBRARY_OUTPUT_PATH}/intermediates/target/libzeromq/build"
            STAMP_DIR "${USER_CONF_LIBRARY_OUTPUT_PATH}/intermediates/target/libzeromq/stamp"
            CONFIGURE_COMMAND
                "${USER_CONF_LIB_SRC_DIR}/3rdParty/zeromq/configure"
                "--prefix=${USER_CONF_EXTERNAL_MODULES_OUTPUT_DIR}"
                "--host=${PROTOLIB_TARGET_SPEC}"
                "CC=${CMAKE_C_COMPILER} ${CMAKE_C_COMPILER_ARG1}" "CFLAGS=${CMAKE_C_FLAGS}"
                "CXX=${CMAKE_CXX_COMPILER} ${CMAKE_CXX_COMPILER_ARG1}" "CXXFLAGS=${CMAKE_CXX_FLAGS}"
            BUILD_COMMAND "$(MAKE)" "-C" "src"
            INSTALL_COMMAND "$(MAKE)" "-C" "src" "install"
            )
        add_library(libzeromq-ant SHARED IMPORTED)
        set_target_properties(libzeromq-ant PROPERTIES
            IMPORTED_LOCATION "${USER_CONF_EXTERNAL_MODULES_OUTPUT_DIR}/lib/libzmq${CMAKE_SHARED_LIBRARY_SUFFIX}"
            )
        if (WIN32)
            set_target_properties(libzeromq-ant PROPERTIES
                IMPORTED_IMPLIB "${USER_CONF_EXTERNAL_MODULES_OUTPUT_DIR}/lib/libzmq${CMAKE_SHARED_LIBRARY_SUFFIX}.a"
                )
        endif ()
    else ()
        ExternalProject_Add (libzeromq-target
            PREFIX "${USER_CONF_LIBRARY_OUTPUT_PATH}/intermediates/target/libzeromq"
            SOURCE_DIR "${USER_CONF_LIB_SRC_DIR}/3rdParty/zeromq"
            BINARY_DIR "${USER_CONF_LIBRARY_OUTPUT_PATH}/intermediates/target/libzeromq/build"
            STAMP_DIR "${USER_CONF_LIBRARY_OUTPUT_PATH}/intermediates/target/libzeromq/stamp"
            CONFIGURE_COMMAND
                "${USER_CONF_LIB_SRC_DIR}/3rdParty/zeromq/configure"
                "--prefix=${USER_CONF_EXTERNAL_MODULES_OUTPUT_DIR}"
                "CC=${CMAKE_C_COMPILER} ${CMAKE_C_COMPILER_ARG1}" "CFLAGS=${CMAKE_C_FLAGS}"
                "CXX=${CMAKE_CXX_COMPILER} ${CMAKE_CXX_COMPILER_ARG1}" "CXXFLAGS=${CMAKE_CXX_FLAGS}"
            BUILD_COMMAND "$(MAKE)" "-C" "src"
            INSTALL_COMMAND "$(MAKE)" "-C" "src" "install"
            )
        add_library(libzeromq-ant SHARED IMPORTED)
        set_target_properties(libzeromq-ant PROPERTIES
            IMPORTED_LOCATION "${USER_CONF_EXTERNAL_MODULES_OUTPUT_DIR}/lib/libzmq${CMAKE_SHARED_LIBRARY_SUFFIX}"
            )
        if (WIN32)
            set_target_properties(libzeromq-ant PROPERTIES
                IMPORTED_IMPLIB "${USER_CONF_EXTERNAL_MODULES_OUTPUT_DIR}/lib/libzmq${CMAKE_SHARED_LIBRARY_SUFFIX}.a"
                )
        endif ()
    endif ()
    add_dependencies (libzeromq-ant libzeromq-target)
else ()
    add_library(libzeromq-ant SHARED IMPORTED)
    set_target_properties(libzeromq-ant PROPERTIES
        IMPORTED_LOCATION "${PRIVATE_LIB_ZMQ}"
        )
endif ()
